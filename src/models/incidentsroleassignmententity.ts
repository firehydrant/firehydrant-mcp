/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  NullableIncidentRoleEntity,
  NullableIncidentRoleEntity$zodSchema,
} from "./nullableincidentroleentity.js";
import {
  NullableUserEntity,
  NullableUserEntity$zodSchema,
} from "./nullableuserentity.js";

export const Status$zodSchema = z.enum([
  "active",
  "inactive",
]);

export type Status = z.infer<typeof Status$zodSchema>;

/**
 * Incidents_RoleAssignmentEntity model
 */
export type IncidentsRoleAssignmentEntity = {
  id?: string | null | undefined;
  status?: Status | null | undefined;
  created_at?: string | null | undefined;
  updated_at?: string | null | undefined;
  incident_role?: NullableIncidentRoleEntity | null | undefined;
  user?: NullableUserEntity | null | undefined;
};

export const IncidentsRoleAssignmentEntity$zodSchema: z.ZodType<
  IncidentsRoleAssignmentEntity,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().datetime({ offset: true }).nullable().optional(),
  id: z.string().nullable().optional(),
  incident_role: NullableIncidentRoleEntity$zodSchema.nullable().optional(),
  status: Status$zodSchema.nullable().optional(),
  updated_at: z.string().datetime({ offset: true }).nullable().optional(),
  user: NullableUserEntity$zodSchema.nullable().optional(),
}).describe("Incidents_RoleAssignmentEntity model");
