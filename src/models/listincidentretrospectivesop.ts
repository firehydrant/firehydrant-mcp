/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  IncidentsRetrospectiveEntityPaginated,
  IncidentsRetrospectiveEntityPaginated$zodSchema,
} from "./incidentsretrospectiveentitypaginated.js";

export type ListIncidentRetrospectivesRequest = {
  page?: number | null | undefined;
  per_page?: number | null | undefined;
  is_hidden?: boolean | null | undefined;
  incident_id: string;
};

export const ListIncidentRetrospectivesRequest$zodSchema: z.ZodType<
  ListIncidentRetrospectivesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  incident_id: z.string(),
  is_hidden: z.boolean().describe("Filter by hidden status.").nullable()
    .optional(),
  page: z.number().int().nullable().optional(),
  per_page: z.number().int().nullable().optional(),
});

export type ListIncidentRetrospectivesResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
  Incidents_RetrospectiveEntityPaginated?:
    | IncidentsRetrospectiveEntityPaginated
    | undefined;
};

export const ListIncidentRetrospectivesResponse$zodSchema: z.ZodType<
  ListIncidentRetrospectivesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Incidents_RetrospectiveEntityPaginated:
    IncidentsRetrospectiveEntityPaginated$zodSchema.optional(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
